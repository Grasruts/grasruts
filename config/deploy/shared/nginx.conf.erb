upstream unicorn {
  server unix:/tmp/unicorn.<%= fetch(:full_app_name) %>.sock fail_timeout=0;
}

server {
  server_name <%= fetch(:server_name) %>;
  listen 80;
  root <%= fetch(:deploy_to) %>/current/public;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;

  listen 443 ssl;
  ssl_certificate /etc/letsencrypt/live/<%= fetch(:domain) %>/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/<%= fetch(:domain) %>/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

server {
  if ($host = <%= fetch(:domain) %>) {
    return 301 https://$host$request_uri;
  }

  if ($host = <%= fetch(:www_domain) %>) {
    return 301 https://$host$request_uri;
  }


  listen 80;
  server_name <%= fetch(:server_name) %>;
  return 404;

}

server {
    if ($host = <%= fetch(:server_name) %>) {
        return 301 https://$host$request_uri;
    }

    server_name <%= fetch(:server_name) %>;
    listen 80;
    return 404;
}
